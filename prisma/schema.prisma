// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mahasiswa {
  id                   String   @id @default(uuid())
  nim                  String
  nama                 String
  nilai_akademik       Float
  kehadiran            Float
  prestasi_akademik    Int
  prestasi_nonakademik Int
  perilaku             Int
  keaktifan_organisasi Int
  tanggal_input        DateTime
  periodeId            String
  userId               String

  periode Periode @relation(fields: [periodeId], references: [id], onDelete: Cascade)

  @@unique([nim, periodeId])
  @@index([periodeId])
  @@index([userId])
}

model Periode {
  id                      String      @id @default(uuid())
  kode_periode            String
  tahun                   String
  semester                Int
  w1_nilai_akademik       Float
  w2_kehadiran            Float
  w3_prestasi_akademik    Float
  w4_prestasi_nonakademik Float
  w5_perilaku             Float
  w6_keaktifan_organisasi Float
  deskripsi               String
  mahasiswa               Mahasiswa[]
  userId                  String

  @@index([userId])
  @@index([kode_periode])
}

model AIChatSession {
  id        String          @id @default(uuid())
  userId    String
  title     String
  createdAt DateTime        @default(now())
  messages  AIChatMessage[]
}

model AIChatMessage {
  id        String        @id @default(uuid())
  session   AIChatSession @relation(fields: [sessionId], references: [id])
  sessionId String
  role      String // "user" | "assistant"
  content   String        @db.Text
  createdAt DateTime      @default(now())

  @@index([sessionId])
}
